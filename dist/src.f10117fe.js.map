{"version":3,"sources":["src/services/Storage.ts","src/Todo/Model/Todo.model.ts","src/constants/index.ts","src/Todo/Views/Todo.view.ts","src/Todo/Controller/Todo.controller.ts","src/Todo/app.ts","src/index.ts"],"names":[],"mappings":";;;;;;AEAa,OAAA,CAAA,OAAA,GAAU;AACrB,EAAA,MAAM,EAAE,QADa;AAErB,EAAA,GAAG,EAAE,KAFgB;AAGrB,EAAA,IAAI,EAAE,MAHe;AAIrB,EAAA,IAAI,EAAE;AAJe,CAAV;ACAb,AGAA,ILEqB,AEFrB,AGAA,ANAqB,KMArB,EHAA,CGAA,EHAA,OAAA,CAAA,KGAA,CAAA,OAAA,CAAA,SHAA,CAAA,EGAA,CAAA,CAAA;ALSE,qBACE,EADF,EAEE,IAFF,EAGE,QAHF,EAIE,QAJF,EAKE,QALF,EAKmB;AAAA,AKZrB,IHIqB,AGJf,GAAG,GAAQ,IAAI,KAAA,CAAA,OAAJ,EAAjB;AHSE,AGPF,QAAQ,CAAC,aHOP,GGPF,CAA0B,kBAA1B,EAA8C;ALY1C,AELF,AGP4C,SLYrC,AKZiD,ELYtD,CKZyD,CAAC,CLYhD,EAAV,CKZsD,EAAZ;ALa1C,AKb0C,CAA9C,QLaS,IAAL,GAAY,IAAZ;AGjBJ,AHkBI,AENA,AEZJ,IDAA,ACAA,KJkBS,AENA,ICZT,GAAA,CHkBI,CENA,EFMgB,CENC,AEZrB,GAAA,IJkBI,CENyB,CAAC,CCZ9B,CAAA,OAAA,ACAA,CDAA,ACAA,GFYqB,CAAuB,GEZ5C,CAAA,IFYqB,CAAjB,WCZJ,CAAA,CAAA,YCAA,CAAA,CAAA;AJmBI,AENA,SFMK,AENA,QFML,GAAgB,EENhB,GAAqB,GFMrB,ADlBM,KGYuB,AHZV,CGYW,MHZE,OGYX,CAAuB,YAAvB,CAArB;ACZJ,AHmBI,AENA,AHZA,IIDJ,ACCqB,ELAjB,GCkBK,AENA,OCbT,CHmBI,CDlBY,CIDhB,AJCiB,CCkBG,CENhB,GAAoB,EHZpB,CAAqB,CCkBrB,EDlBA,EGY4B,AHZF,CGYG,CCbjC,CAAA,EJCI,KIDJ,CAAA,GDawB,CAAuB,MAAvB,CAApB,UCbJ,CAAA,CAAA;AHoBG,AENA,AEVD,ALFC,IGcD,aEZA;ADHF,ACGE,IDHF,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;ACII,IDCiB,KCDZ,cAAL,GAAsB,ELDhB,EKCoB,GLDT,cKCS,CAAA,OAAJ,EAAtB;ADQF,ACPC,ALDC,aAAO,YAAY,CAAC,EIQtB,KJRS,CCiBE,ADjBmB,GAArB,CAAP;AIQF,AHUE,ADjBD,aCiBQ,KAAK,IAAZ,UENU,OAAkB;AFO7B,AEP6B;ACJ9B;ADKE,WAAK,aAAL,CAAmB,EEVjB,OFUF,GAA+B,EAA/B;ACYF,ADVE,AEXA,MFWA,KAAK,AEXA,CFWC,GAAN,CAAU,SEXV,CFWW,AEXS,IFWV,AEXV,EJiBU,AENoB,OFMP;AGKzB,AHJE,AENE,AEXH,SDqBD,EHJO,CENG,GFMR,EGIF,CHJc,EGIM,EDVA,CFMlB,EENqB,IAAI,CAAC,ECUH,MDVF,GAAgB,OAAhB,GAA0B,SAA7C;ACWF,AHJA,AENE,AHvBN,OAAA,CAAA,EIiCU,EDVE,CFMD,CGIG,CJjCd,EIiCiB,AHJb,CENc,AHvBlB,IIiCqB,CAAC,EJjCtB,KIiCiB,CAAa,OAAb,CAAqB,OAArB,ADVqB,CCUlC,GDVsC,CAAC,EAAzB,OAAZ;AFOH,AET+B,+BAGG,OAAA,CAAA,OAHH;ACa9B,ADb8B,UCa1B,EDVM,IAHoB,oBAGpB,IAHoB;ACc5B,ADd4B,YCcxB,ADXU,ICWN,CAAC,CDdmB,ICcxB,CAAW,IAAX,CAAJ,EAAsB,QDXR,MAHc;ACe1B,ADf0B,YAGN,IAHM,CCenB,IAAI,CAAC,KAAL,CAAW,IAAX,AHJJ,CGIH,GDZoB,IAHM,EAK5B;ACWC,AHJH,AI/BJ,OAAA,CAAA,KJ+BW,EI/BX,GJ+BgB,AI/BhB,GAAA,KJ+BI;AACD,AENG,YAAM,QAAQ,+CACY,MADZ,oFAGgB,IAHhB,gBAGyB,MAHzB,iCAGqD,UAHrD,8EAKa,IAAI,CAAC,QAAL,IAAiB,SAL9B,+BAML,IAAI,CAAC,IANA,4GASgB,IAThB,+BASsC,MATtC,gEAUgB,MAVhB,gBAU2B,MAV3B,gFAAd;ACUA,ADKA,QAAA,KAAI,CAAC,CCLE,EAAP,UDKA,CAAmB,SAAnB,cAAmC,QAAnC;ACJD,ADKC,OCVF,CAKE,OAAO,ADKA,IAAP,CCLA,EAAc;AACd,ADKD,OAxBD,CCmBE,OAAO,CAAC,GAAR,CAAY,KAAZ,KHJM,OAAc;AGKpB,AHJF,AEUA,WFVK,EEUE,ECNE,EAAP,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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export default class Storage {\n  setTodo(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  getTodo(key: string) {\n    return localStorage.getItem(key);\n  }\n}\n","import TodoDocument from \"./Todo.interface\";\n\nexport default class TodoModel implements TodoDocument {\n  readonly id: number;\n  name: string;\n  public complete: boolean;\n  readonly createAt: Date;\n  updateAt: Date;\n\n  constructor(\n    id: number,\n    name: string,\n    createAt: Date,\n    updateAt: Date,\n    complete: boolean\n  ) {\n    this.id = id;\n    this.name = name;\n    this.createAt = createAt;\n    this.updateAt = updateAt;\n    this.complete = complete!;\n  }\n\n  getTodoName(): string {\n    return this.name;\n  }\n\n  setTodoName(value: string): TodoModel {\n    this.name = value;\n    return this;\n  }\n\n  getStatus(): boolean {\n    return this.complete;\n  }\n\n  setStatus(value: boolean): TodoModel {\n    this.complete = value;\n    return this;\n  }\n\n  setUpdateAt(value: Date): TodoModel {\n    this.updateAt = value;\n    return this;\n  }\n}\n","export const ACTIONS = {\n  REMOVE: \"Remove\",\n  ADD: \"Add\",\n  EDIT: \"Edit\",\n  MARK: \"Mark\"\n};\n","import {\n  ACTIONS as actionType\n} from \"../../constants/index\";\nimport TodoController from \"../Controller/Todo.controller\";\nimport TodoModel from \"../Model/Todo.model\";\n\nexport default class TodoView {\n  private todoInput;\n  private todoContainer;\n  private addNewButton;\n\n  constructor() {\n    this.todoInput = document.querySelector(\"#input\") as HTMLInputElement;\n    this.todoContainer = document.querySelector(\".todo-list\") as HTMLUListElement;\n    this.addNewButton = document.querySelector(\".add\") as HTMLButtonElement;\n  }\n\n  // render all list todos to UI\n  renderTodos(todos: TodoModel[]): TodoView {\n    this.todoContainer.innerHTML = \"\";\n\n    todos.map((todo: TodoModel) => {\n      const todoStatus = todo.complete ? \"check\" : \"uncheck\";\n      const todoId = `data-todo-id=\"${todo.id}\"`;\n      const { EDIT, REMOVE, MARK } = actionType;\n      \n      //  <input data-task-id=\"${todo.id}\" type=\"text\" value=\"${todo.name}\">\n      \n      const todoItem = `\n        <li class=\"todo-item\" ${todoId}>\n           <div class=\"icon\">\n             <button data-action=\"${MARK}\" ${todoId} class=\"fa btn btn-${todoStatus}\"></button>\n           </div>\n           <p class=\"todo-name ${todo.complete && \"checked\"}\">\n             ${todo.name}\n           </p>\n           <div class=\"todo-actions\">\n             <button data-action=\"${EDIT}\" class=\"edit\" ${todoId}>Edit</button>\n             <button data-action=\"${REMOVE}\" ${todoId} class=\"delete\">Remove</button>\n           </div>\n        </li>\n      `;\n\n      this.todoContainer.innerHTML += `${todoItem}`;\n      return true;\n    });\n\n    return this;\n  }\n\n  // handle actions\n  // bind event to controller\n  connectEventListener(controller: TodoController): void {\n    /**\n     * Submit data by click add button or keydown in input field\n     */\n    this.addNewButton.addEventListener(\"click\", (): void => {\n      if (this.addNewButton.classList.contains('add')) { \n        if (controller.addTodo(this.todoInput.value)) {\n          this.todoInput.value = \"\";\n        } \n      }\n    });\n\n    this.todoInput.addEventListener('keypress', (e: KeyboardEvent): void => {\n      if (e.keyCode === 13) {\n        const todoInput = e.target as HTMLInputElement;\n        if (controller.addTodo(todoInput.value)) {\n          this.todoInput.value = \"\"\n        }\n      }\n    })\n\n    /**\n     * action on todo item\n     */\n    this.todoContainer.addEventListener('click', (e) => {\n      const targetNode = e.target as HTMLElement;\n      const todoID =  Number(targetNode.getAttribute('data-todo-id'));\n      const todoAction = targetNode.getAttribute('data-action');\n            \n      // toggle status\n      if (todoAction === actionType.MARK) {\n        controller.handleCheckComplete(todoID)\n      }\n\n      // delete a todo\n      if (todoAction === actionType.REMOVE) {\n        controller.removeTodo(todoID)\n      }\n\n      // update a todo\n      if (todoAction === actionType.EDIT) {\n        const data = Array.from(controller.getTodos()) as TodoModel[];\n        const currentTodo = data.find(todo => todo.id === todoID) as TodoModel;\n        const prevName = currentTodo.name;\n\n        this.todoInput.value = prevName;\n        this.todoInput.focus()\n        this.addNewButton.innerHTML = \"Update\"\n        this.addNewButton.classList.remove('add')\n        this.addNewButton.classList.add('update')\n        const todoInputEditData = this.todoInput as HTMLInputElement;\n        \n          \n        this.addNewButton.addEventListener('click', e => {\n          controller.updateTodo(todoID, todoInputEditData.value)\n          \n          this.todoInput.value = \"\";\n          this.addNewButton.classList.remove('update')\n          this.addNewButton.classList.add('add')\n          this.addNewButton.innerHTML = \"Add\"\n        })\n      }\n    })\n  }\n}","import Storage from \"../../services/Storage\";\nimport TodoModel from \"../Model/Todo.model\";\nimport TodoView from \"../Views/Todo.view\";\nimport { ACTIONS as actionsType } from \"../../constants/index\";\n\ntype GetTodo = () => TodoModel[];\n\nexport default class TodoController {\n  private todoView: TodoView;\n  private todos: TodoModel[];\n  private storage: Storage;\n  private currentTodo: number;\n  private isComplete: boolean;\n\n  constructor() {\n    this.todoView = new TodoView();\n    this.todos = [];\n    this.storage = new Storage();\n    this.isComplete = false;\n    this.currentTodo = 0;\n  }\n\n  // init todo module\n  init(): void {\n    const data = Array.from(this.getTodos()) as TodoModel[];\n\n    this.todos = data;\n    this.todoView.connectEventListener(this)\n    this.displayTodos(this.todos)\n  }\n\n  // get todo from localStorage\n  getTodos: GetTodo = () => {\n    const data = this.storage.getTodo(\"todos\") as string;\n    try {\n      if (JSON.parse(data)) {\n        return JSON.parse(data);\n      }\n      return [];\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  };\n\n  // display todos\n  displayTodos(todos: TodoModel[]): void {\n    this.todoView.renderTodos(todos)\n    // const baseData = Array.from(this.getTodos()) as TodoModel[];    \n  }\n\n  // add a todo\n  addTodo(data: string): boolean {\n    if (data) {\n      const currentTime = new Date();\n      const id: number = new Date().getTime();\n      const name: string = data;\n      const createAt = currentTime;\n      const updateAt = currentTime;\n      \n      const todo: TodoModel = new TodoModel(\n        id,\n        name,\n        createAt,\n        updateAt,\n        false\n      );\n      this.todos.push(todo);\n\n      try {\n        this.storage.setTodo(\"todos\", JSON.stringify(this.todos));\n        this.displayTodos(this.todos);\n\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  // remove todo\n  removeTodo(todoId: number): boolean {\n    this.todos = this.todos.filter((todo: TodoModel): boolean => todo.id !== todoId)\n    \n    try {\n      this.storage.setTodo('todos', JSON.stringify(this.todos))\n      this.displayTodos(this.todos)\n      return true\n    } catch (error) {\n      console.log(error);\n      return false\n    }\n  }\n\n  // check a todo complete\n  handleCheckComplete(todoId: number): boolean {    \n    this.isComplete = false;\n    const baseData = Array.from(this.getTodos()) as TodoModel[];\n    const currentItem = baseData.find(todo => todo.id == todoId) as TodoModel;\n    \n    currentItem.complete = !currentItem.complete;\n    currentItem.updateAt = new Date();\n    \n\n    this.todos = baseData;\n    \n    try {\n      this.storage.setTodo('todos', JSON.stringify(this.todos))\n      this.displayTodos(this.todos)\n      return true\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  // update todo list\n  updateTodo(todoId: number, newData: string): boolean {\n    this.isComplete = false;\n    const baseData = Array.from(this.getTodos()) as TodoModel[];\n    const currentItem = baseData.find(todo => todo.id == todoId) as TodoModel;\n\n    currentItem.name = newData;\n    currentItem.updateAt = new Date();\n\n    this.todos = baseData\n    try {\n      this.storage.setTodo('todos', JSON.stringify(this.todos))\n      this.displayTodos(this.todos)\n      return true;\n    } catch (error) {\n      console.log(error);\n      \n      return false\n    }\n  }\n}\n","import TodoController from \"./Controller/Todo.controller\";\n\nexport default class App {\n  private todoController: TodoController;\n\n  constructor() {\n    this.todoController = new TodoController();\n  }\n\n  init(): void {\n    this.todoController.init()\n  }\n}","import App from \"./Todo/app\";\n\nconst app: App = new App();\n\ndocument.addEventListener('DOMContentLoaded', (): void => app.init())"]}